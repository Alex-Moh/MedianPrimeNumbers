{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ajmal .M\\\\GitHub\\\\MedianPrimeNumbers(TouchBistro)\\\\src\\\\components\\\\NumberInputField.js\";\n\n/*\r\n    NumberInputField.js\r\n    ===========\r\n    React component file for the number input field.\r\n*/\nimport React, { Component } from 'react';\nimport \"./NumberInputField.css\";\n\nclass NumberInputField extends Component {\n  constructor() {\n    super(); // number is the user number, errorText is any error text, and median is the displayed median array\n\n    this.state = {\n      number: 0,\n      errorText: '',\n      median: 'N/A'\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } // When the user changes the text box contents, change the component's state appropriately\n\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  } // When there is an error, display relevant error text\n\n\n  onError(errText) {\n    this.setState((previousState, props) => {\n      return {\n        errorText: errText + \" ('\" + this.state.number + \"')\",\n        median: \"N/A\"\n      };\n    });\n  } // When the user submits the number to the server\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(\"> Submitting form\"); //console.log(this.state);\n    // Perform POST request to server\n    // Send this component's state as body data\n\n    fetch('http://localhost:3000/setprime', {\n      method: 'POST',\n      body: JSON.stringify(this.state)\n    }) // When a response is given...\n    .then(r => {\n      //console.log(r);\n      // If there is an error (200 is OK)\n      if (r.status !== 200) {\n        throw r.statusText;\n      }\n\n      return r.json();\n    }) // Data is exposed after response stream is finished\n    .then(data => {\n      //console.log(data);\n      // Set state to received data and no error\n      this.setState((previousState, props) => {\n        return {\n          errorText: '',\n          median: data\n        };\n      });\n    }) // Show appropriate error text\n    .catch(e => {\n      //console.log(e);\n      this.onError(e.toString());\n    });\n  } // Render component.\n  // Includes text box, submit button, error label, and median array label\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"txtNum\",\n      type: \"text\",\n      name: \"number\",\n      onChange: this.onChange,\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"btnSubmit\",\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"lblError\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, this.state.errorText), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"lblMedian\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Median: \", this.state.median.toString())));\n  }\n\n}\n\nexport default NumberInputField;","map":{"version":3,"sources":["C:/Users/Ajmal .M/GitHub/MedianPrimeNumbers(TouchBistro)/src/components/NumberInputField.js"],"names":["React","Component","NumberInputField","constructor","state","number","errorText","median","onChange","bind","onSubmit","e","setState","target","name","value","onError","errText","previousState","props","preventDefault","console","log","fetch","method","body","JSON","stringify","then","r","status","statusText","json","data","catch","toString","render"],"mappings":"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","sourcesContent":["/*\r\n    NumberInputField.js\r\n    ===========\r\n    React component file for the number input field.\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport \"./NumberInputField.css\";\r\n\r\nclass NumberInputField extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        // number is the user number, errorText is any error text, and median is the displayed median array\r\n        this.state = {\r\n            number: 0,\r\n            errorText: '',\r\n            median: 'N/A'\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    // When the user changes the text box contents, change the component's state appropriately\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    // When there is an error, display relevant error text\r\n    onError(errText) {\r\n        this.setState((previousState, props) => {\r\n            return {\r\n                errorText: errText + \" ('\" + this.state.number + \"')\",\r\n                median: \"N/A\"\r\n            }\r\n        })\r\n    }\r\n\r\n    // When the user submits the number to the server\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(\"> Submitting form\");\r\n        //console.log(this.state);\r\n\r\n        // Perform POST request to server\r\n        // Send this component's state as body data\r\n        fetch('http://localhost:3000/setprime', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n        })\r\n            // When a response is given...\r\n            .then(r => {\r\n                //console.log(r);\r\n\r\n                // If there is an error (200 is OK)\r\n                if (r.status !== 200) {\r\n                    throw r.statusText;\r\n                }\r\n                return r.json();\r\n            })\r\n            // Data is exposed after response stream is finished\r\n            .then(data => {\r\n                //console.log(data);\r\n\r\n                // Set state to received data and no error\r\n                this.setState((previousState, props) => {\r\n                    return {\r\n                        errorText: '',\r\n                        median: data\r\n                    }\r\n                })\r\n            })\r\n            // Show appropriate error text\r\n            .catch(e => {\r\n                //console.log(e);\r\n                this.onError(e.toString());\r\n            })\r\n    }\r\n\r\n    // Render component.\r\n    // Includes text box, submit button, error label, and median array label\r\n    render() {\r\n        return (\r\n            <div className=\"col-sm\">\r\n                <div align=\"center\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <input id=\"txtNum\" type=\"text\" name=\"number\" onChange={this.onChange} className=\"form-control\" />\r\n                        <button id=\"btnSubmit\" type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                    </form>\r\n                    <p id=\"lblError\">{this.state.errorText}</p>\r\n                    <p id=\"lblMedian\">Median: {this.state.median.toString()}</p>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default NumberInputField;"]},"metadata":{},"sourceType":"module"}